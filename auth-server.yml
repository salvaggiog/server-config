# We need to setup different context root for the auth server so that we can store separate
# cookies for both the API gateway as well as the OAuth2 authorization server.
zuul:
  host:
    socket-timeout-millis: 500000
    connect-timeout-millis: 500000
hystrix:
  command:
    default:
      execution:
#        enabled: false
        isolation:
#          strategy: THREAD
          thread:
            timeoutInMilliseconds: 10000

server:
  port: 8899
  contextPath: /userauth 

eureka:
  instance:
    preferIpAddress: true
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
                
security:
  user:
    password: password      

#hystrix:
#  command:
#    default:
#      execution:
#        isolation:
#          thread:
#            timeoutInMilliseconds: 400000
# Datasource and JPA configuration to be used for storing the OAuth authorization details 
# and token store
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/core_dlg_platform
    username: root
    password: pgi1979
    driver-class: com.mysql.jdbc.Driver
    testOnBorrow: true
    validationQuery: SELECT 1
    
  jpa:
    database-platform: org.hibernate.dialect.MySQL5Dialect
    show-sql: true
    entitymanager-packagesToScan: com.microservice.mysql
    hibernate:
      ddl-auto: none
      useUnicode: true
      characterEncoding: utf8_bin
      charSet: UTF-8
      autoReconnect: true
      autoReconnectForPools: true
      c3p0:
         acquire_increment: 3
         max_size: 200
         min_size: 3
         maxIdleTime: 120
         unreturned_connection_timeout: 150
         timeout: 180
         maxConnectionAge: 120
         idle_test_period: 10
         maxStatements: 0
